CHALLENGE STATEMENT :
********************

A. ORDER BY

	1. Using SQL, list all the songs so that the songs from the same album appear together in track order.

		>> SELECT * FROM songs ORDER BY album, track;
 
B. JOIN
	1. A JOIN clause is used to combine rows from two or more tables, based on a related column between them.
		>> SELECT track, title, album FROM songs INNER JOIN albums ON songs.album = albums._id limit 10;
		>> SELECT albums.name, artists.name FROM albums, artists WHERE albums.artist = artists._id limit 10;
		
		
		
		
FOREIGN KEY CHECKS:
*******************
SET foreign_key_checks = 0;  //To disable referential integrity.
SET foreign_key_checks = 1;   //To enable referential integrity.

		
		
ADDING FOREIGN KEY:
*******************
ALTER TABLE songs ADD INDEX par_ind ( album ); 
ALTER TABLE songs ADD CONSTRAINT fk_album
FOREIGN KEY ( album ) REFERENCES albums ( _id ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE albums ADD INDEX par_ind ( artist ); 
ALTER TABLE albums ADD CONSTRAINT fk_artist
FOREIGN KEY ( artist ) REFERENCES artists ( _id ) ON DELETE CASCADE ON UPDATE CASCADE;


		
SHOW CREATE TABLE songs;  // To check all constraints on a table.

SELECT TABLE_NAME, CONSTRAINT_TYPE, CONSTRAINT_NAME
FROM information_schema.table_constraints
WHERE table_name='songs';


CHANGING COLUMN NAME:
*********************
ALTER TABLE albums RENAME COLUMN name TO album_name; 
ALTER TABLE artists RENAME COLUMN name TO artist_name; 


